<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.youren.bbs.mapper.PostMapper">

	<resultMap id="postResultMap" type="Post">
		<id property="id" column="id" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="createTime" column="create_time" />
		<result property="browse" column="browse" />
		<result property="difference" column="difference" />
		<result property="awesome" column="awesome" />
		<result property="state" column="state" />
		<result property="replynumber" column="replynumber" />
		<result property="collectCount" column="collectcount" />
		<result property="coverImage" column="cover_image"/>
		<result property="synopsis" column="synopsis"/>
		<!-- 多对一的映射 -->
		<association property="user" javaType="User">
			<id property="id" column="uid"/>
			<result property="username" column="username"/>
			<result property="headshot" column="headshot"/>
		</association>
		<association property="category" javaType="Category">
			<id property="id" column="category"/>
			<result property="name" column="caname" />
		</association>
	</resultMap>

    <insert id="create" parameterType="Post" useGeneratedKeys="true" keyProperty="id">
		insert into t_post(user_id,title,content,create_time,state,category,cover_image,synopsis) values
		(#{user.id},#{title},#{content},#{createTime},#{state},#{category.id},#{coverImage},#{synopsis})
	</insert>

	<sql id="user_column_list">
		p.id,p.title,p.content,p.create_time,p.browse,p.difference,p.awesome,p.state,p.category,ca.name caname,
			   u.id uid, u.username,u.headshot,p.replynumber,p.collectcount,p.cover_image,p.synopsis
	</sql>

	<sql id="user_column_list_NoContent">
		p.id,p.title,p.create_time,p.browse,p.difference,p.awesome,p.state,p.category,ca.name caname,
			   u.id uid, u.username,u.headshot,p.replynumber,p.collectcount,p.cover_image,p.synopsis
	</sql>

	<update id="updatebrowse" parameterType="Post">
		update t_post set browse=#{browse} where id=#{id}
	</update>

	<update id="updatedifference" parameterType="Post">
		update t_post set difference=#{difference} where id=#{id}
	</update>

	<update id="updateawesome" parameterType="Post">
		update t_post set awesome=#{awesome} where id=#{id}
	</update>

	<update id="updatereplynumber" parameterType="Post">
		update t_post set replynumber=#{replynumber} where id=#{id}
	</update>

	<update id="updateCollectCount" parameterType="Post">
		update t_post set collectcount=#{collectCount} where id=#{id}
	</update>

	<update id="update" parameterType="Post">
		update t_post
		set title=#{title},content=#{content},category=#{category.id},
			synopsis=#{synopsis},cover_image=#{coverImage}
		where id=#{id}
	</update>


	<update id="updateState" parameterType="Post">
		update t_post set state=#{state} where id=#{id}
	</update>

	<select id="findById" parameterType="long" resultMap="postResultMap">
		select
        <include refid="user_column_list" />
        from t_post p
		left join t_user u on p.user_id=u.id
		left join t_category ca on ca.id=p.category
		where p.id=#{id}
	</select>

	<select id="findByUserId" parameterType="long" resultMap="postResultMap">
		select
		<include refid="user_column_list_NoContent" />
		from t_post p
		left join t_user u on p.user_id=u.id
		left join t_category ca on ca.id=p.category
		where p.user_id=#{userId}
		GROUP BY p.create_time desc
	</select>

	<select id="findAll" resultMap="postResultMap">
		select
        <include refid="user_column_list_NoContent" />
		from t_post p
		left join t_user u on p.user_id=u.id
		left join t_category ca on ca.id=p.category
		<where>
			<if test="today!=null">
				and STR_TO_DATE(create_time,'%Y-%m-%d') = current_date;
			</if>
		</where>
		GROUP BY p.create_time desc
	</select>
	<select id="findAllByToDay" resultMap="postResultMap">
		select create_time
		from t_post
				where STR_TO_DATE(create_time,'%Y-%m-%d') = current_date;
	</select>

    <select id="findByKeyWord" resultMap="postResultMap">
        select
        <include refid="user_column_list_NoContent" />
        from t_post p
        left join t_user u on p.user_id=u.id
        left join t_category ca on ca.id=p.category
        <where>

            <if test="keyword!=null">
               and p.title like #{keyword}
            </if>
               GROUP BY p.create_time desc
        </where>
    </select>

	<select id="ByKeyWord" resultMap="postResultMap">
		select
		<include refid="user_column_list_NoContent" />
		from t_post p
		left join t_user u on p.user_id=u.id
		left join t_category ca on ca.id=p.category
		<where>

			<if test="field!=null">
				and ${field} like #{keyword}
			</if>
			GROUP BY p.create_time desc
		</where>
	</select>

    <select id="findAllByPopular" resultMap="postResultMap">
        select
        <include refid="user_column_list_NoContent" />
        from t_post p
        left join t_user u on p.user_id=u.id
        left join t_category ca on ca.id=p.category
        GROUP BY p.browse desc
    </select>
</mapper>